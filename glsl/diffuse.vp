
//calc view 
uniform vec3			u_viewOriginES;

varying vec3			v_viewVecTS;
varying vec3			v_lightVec;

attribute vec3			a_tangent;
attribute vec3			a_binormal;

void main ()
{
gl_TexCoord[0] = gl_MultiTexCoord0; // diffuse, addative, caustics
gl_TexCoord[1] = gl_MultiTexCoord1; // lightmap only


// calculate tangent space view vector for parallax
vec3 tmp = u_viewOriginES - gl_Vertex.xyz;
v_viewVecTS.x = dot(tmp, a_tangent);
v_viewVecTS.y = dot(tmp, a_binormal);
v_viewVecTS.z = dot(tmp, gl_Normal);


vec3 norm = normalize(gl_Normal);
vec3 LV = norm;
v_lightVec.x = dot(a_tangent, LV);
v_lightVec.y = dot(a_binormal, LV);
v_lightVec.z = dot(gl_Normal.xyz, LV); 

gl_Position = ftransform();

gl_FrontColor = gl_Color;
}