out vec4			v_texCoord0;
out float			v_depth, v_depthRefr;
out	vec4			v_color;
uniform mat4		u_modelViewProjectionMatrix, 
					u_modelViewMatrix, 
					u_projectionMatrix, 
					u_texRotateMatrix;

layout(location = 0) in vec3 att_position;
layout(location = 4) in vec4 att_color4f;
layout(location = 5) in vec4 att_texCoordDiffuse;

void main (void) {
	v_texCoord0 = u_texRotateMatrix * att_texCoordDiffuse;
	v_color = att_color4f;
	// soft depth
	v_depth = -(u_modelViewMatrix * vec4(att_position, 1.0)).z;
	// refraction
	vec4 positionVS = u_modelViewMatrix * vec4(att_position, 1.0);
	positionVS = vec4(1.0, 0.0, positionVS.z, 1.0);
	v_depthRefr = -positionVS.z;

	gl_Position = u_modelViewProjectionMatrix * vec4(att_position, 1.0);
}
