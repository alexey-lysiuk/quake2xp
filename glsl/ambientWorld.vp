uniform vec3		u_viewOriginES;
uniform int			u_parallaxType;
uniform int			u_LightMapType;

varying vec3		v_viewVecTS;
varying vec2		v_wTexCoord;
varying vec2		v_lTexCoord;
varying vec2		v_envCoord;

attribute vec3		a_tangent;
attribute vec3		a_binormal;
attribute vec3		a_vertArray;
attribute vec3		a_normArray;
attribute vec2		a_texCoord;
attribute vec2		a_LtexCoord;

void main (void) {
	// setup tex coords
	v_wTexCoord = a_texCoord;  // diffuse, additive, caustics
	v_lTexCoord = a_LtexCoord; // lightmap only

	// calculate tangent space view vector for parallax
	vec3 tmp = u_viewOriginES - a_vertArray;
	
	v_viewVecTS.x = dot(tmp, a_tangent);
	v_viewVecTS.y = dot(tmp, a_binormal);
	v_viewVecTS.z = dot(tmp, a_normArray);

	gl_Position = gl_ModelViewProjectionMatrix * vec4(a_vertArray, 1.0);
}
