layout(location = 0) in vec3 att_position;
layout(location = 1) in vec3 att_normal;
layout(location = 4) in vec4 att_color4f;
layout(location = 5) in vec2 att_texCoordDiffuse;


out	vec2			v_texCoord;
out	vec2			v_envCoord;
out	vec2			v_shellCoord;
out	vec4			v_color;

uniform	float		u_scroll;
uniform	vec3		u_viewOrg;
uniform	int			u_isEnvMap;
uniform	int			u_isShell;
uniform mat4		u_modelViewProjectionMatrix;

void main ()
{

if(u_isShell == 1 || u_isEnvMap == 1){
	vec3 viewPos = normalize(u_viewOrg - att_position);
	float d = dot(att_normal, viewPos);
	vec3 reflected = att_normal * 2.0 * d - viewPos;
	v_shellCoord = v_envCoord = 0.5 + reflected.yz * vec2(0.5, -0.5);

	if(u_isShell == 1)
		v_shellCoord += u_scroll;
}

v_texCoord = att_texCoordDiffuse;
v_color = att_color4f;

gl_Position = u_modelViewProjectionMatrix * vec4(att_position, 1.0);
}
