attribute	vec2			a_texCoord;
attribute	vec3			a_vertArray;
attribute	vec3			a_normArray;
attribute	vec4			a_colorArray;

varying		vec2			v_texCoord;
varying		vec2			v_envCoord;
varying		vec2			v_shellCoord;
varying		vec4			v_color;

uniform		float			u_scroll;
uniform		int				u_isEnvMap;
uniform		int				u_isShell;

void main ()
{
if(u_isShell == 1){
	vec3 us = normalize( vec3(gl_ModelViewMatrix * vec4(a_vertArray, 1.0)) );
	vec3 ns = normalize(gl_NormalMatrix * a_normArray);
	vec3 rs = reflect( us, ns );
	float ms = 2.0 * sqrt( rs.x*rs.x + rs.y*rs.y + (rs.z+1.0)*(rs.z+1.0) );
	v_shellCoord.x = rs.x/ms + 0.5;
	v_shellCoord.y = rs.y/ms + 0.5;
	v_shellCoord += u_scroll;
}

if(u_isEnvMap == 1){
	vec3 u = normalize( vec3(gl_ModelViewMatrix * vec4(a_vertArray, 1.0)) );
	vec3 n = normalize(gl_NormalMatrix * a_normArray);
	vec3 r = reflect( u, n );
	float m = 2.0 * sqrt( r.x*r.x + r.y*r.y + (r.z+1.0)*(r.z+1.0) );
	v_envCoord.x = r.x/m + 0.5;
	v_envCoord.y = r.y/m + 0.5;
}

v_texCoord = a_texCoord;
v_color = a_colorArray;

gl_Position = gl_ModelViewProjectionMatrix * vec4(a_vertArray, 1.0);

}
