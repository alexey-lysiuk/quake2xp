layout(location = 0) in vec3 att_position;
layout(location = 5) in vec2 att_texCoordDiffuse;

out vec2		v_deformTexCoord;
out vec2		v_deformMul;
out float		v_depth;
out float		v_depthS;
out	vec4		v_color;

uniform float	u_deformMul;
uniform mat4	u_mvp, u_mv, u_pm;

void main (void) {
	
	v_deformTexCoord = att_texCoordDiffuse;

	// compute view space depth
	vec4 positionVS = u_mv * vec4(att_position, 1.0);
	positionVS = vec4(1.0, 0.0, positionVS.z, 1.0);
	v_depth = -positionVS.z;
	v_depthS = -(u_mv * vec4(att_position, 1.0)).z;

	// compute the deform strength
	vec2 d = (u_pm * positionVS).xw;
	d.x /= max(d.y, 1.0);

	v_deformMul = min(d.xx, 0.02) * u_deformMul;

	gl_Position = u_mvp * vec4(att_position, 1.0);

}
