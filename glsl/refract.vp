layout(location = 0) in vec3 att_position;
layout(location = 4) in vec4 att_color4f;
layout(location = 5) in vec2 att_texCoordDiffuse;

out vec2			v_deformTexCoord;
out vec2			v_deformMul;
out float			v_depth;
out float			v_depthS;
out	vec4			v_color;

uniform float		u_deformMul;

void main (void) {
	
	v_deformTexCoord = att_texCoordDiffuse;

	// compute view space depth
	vec4 positionVS = gl_ModelViewMatrix * vec4(att_position, 1.0);
	positionVS = vec4(1.0, 0.0, positionVS.z, 1.0);
	v_depth = -positionVS.z;
	v_depthS = -(gl_ModelViewMatrix * vec4(att_position, 1.0)).z;

	// compute the deform strength
	vec2 d = (gl_ProjectionMatrix * positionVS).xw;
	d.x /= max(d.y, 1.0);

	v_deformMul = min(d.xx, 0.02) * u_deformMul;

	gl_Position = gl_ModelViewProjectionMatrix * vec4(att_position, 1.0);

}
