varying vec2			v_deformTexCoord;
varying vec2			v_diffuseTexCoord;
varying vec2			v_deformMul;
varying float			v_depth;
varying vec3			v_normal;
varying vec4			v_viewVec;
uniform float			u_deformMul;

attribute	vec3		a_vertArray;
attribute	vec3		a_normArray;
attribute	vec2		a_texCoord;
attribute	vec2		a_2texCoord;

void main ()
{
v_diffuseTexCoord = a_texCoord; // colorMap 
v_deformTexCoord =  a_2texCoord; // dstMap

#ifdef TRANS
// compute view space depth
vec4 positionVS = gl_ModelViewMatrix * vec4(a_vertArray, 1.0);
positionVS = vec4(1.0, 0.0, positionVS.z, 1.0);
v_depth = -positionVS.z;

// compute the deform strength
vec2 d = (gl_ProjectionMatrix * positionVS).xw;
d.x /= max(d.y, 1.0);

v_deformMul = min(d.xx, 0.02) * u_deformMul;
#endif

gl_Position = gl_ModelViewProjectionMatrix * vec4(a_vertArray, 1.0);
}
