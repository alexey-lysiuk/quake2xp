uniform vec3			u_viewOriginES;
uniform vec3 			u_LightOrg;
uniform float			u_fogDensity;

varying vec3			v_viewVecTS;
varying vec3 			v_lightVec;
varying vec2			v_texCoord; 
varying vec4			v_CubeCoord;
varying vec3			v_AttenCoord;
varying float			v_fogFactor;

attribute vec3			a_tangent;
attribute vec3			a_binormal;
attribute vec3			a_normArray;
attribute vec3			a_vertArray;
attribute vec2			a_texCoord;

void main ()
{
// setup tex coords
v_texCoord = a_texCoord;  // diffuse & bump
v_CubeCoord = gl_TextureMatrix[2] * vec4(a_vertArray, 1.0);
v_AttenCoord = gl_TextureMatrix[3] * vec4(a_vertArray, 1.0);

// calculate tangent space view vector for parallax
vec3 tmp = u_viewOriginES - a_vertArray;
v_viewVecTS.x = dot(tmp, a_tangent);
v_viewVecTS.y = dot(tmp, a_binormal);
v_viewVecTS.z = dot(tmp, a_normArray);

vec3 LV = u_LightOrg - a_vertArray;
v_lightVec.x = dot(a_tangent, LV);
v_lightVec.y = dot(a_binormal, LV);
v_lightVec.z = dot(a_normArray, LV); 

gl_Position = gl_ModelViewProjectionMatrix * vec4(a_vertArray, 1);

const float LOG2 = 1.442695;
gl_FogFragCoord = length(gl_Position);
v_fogFactor = exp2(-u_fogDensity * 
					u_fogDensity * 
					gl_FogFragCoord * 
					gl_FogFragCoord * 
					LOG2);
v_fogFactor = clamp(v_fogFactor, 0.0, 1.0);
}
